// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BBBankContext))]
    [Migration("20250212214112_name_and_id_change")]
    partial class name_and_id_change
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entites.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("AccountTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            AccountNumber = "0001-1001",
                            AccountStatus = 0,
                            AccountTitle = "Patterns Tech",
                            CurrentBalance = 3500m,
                            UserId = "5b1aa188-636f-436a-a2da-ae742ddadedf"
                        },
                        new
                        {
                            Id = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            AccountNumber = "0002-2002",
                            AccountStatus = 0,
                            AccountTitle = "John Doe",
                            CurrentBalance = 545m,
                            UserId = "52694168-6706-4595-bdea-bae0da5923f0"
                        });
                });

            modelBuilder.Entity("Entites.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = "a9090b73-c531-4c71-952a-41b871ad58fd",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 3000m,
                            TransactionDate = new DateTime(2025, 2, 11, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(5565),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "b3214210-bd11-423e-8ca5-6c6d19cc95d6",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -500m,
                            TransactionDate = new DateTime(2024, 2, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6204),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "e442cf3e-a110-436c-93a4-7a3849d0429d",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 1000m,
                            TransactionDate = new DateTime(2023, 2, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6233),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "cfcdd90e-3756-4470-b349-4208e6c535a6",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 500m,
                            TransactionDate = new DateTime(2024, 11, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6237),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "2aa19b0a-dd32-4f49-a4e3-0107d1ca6099",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -200m,
                            TransactionDate = new DateTime(2024, 10, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6270),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "e81b121f-4897-4fcd-947f-222e77cc0e6d",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 500m,
                            TransactionDate = new DateTime(2024, 9, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6274),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "dfc9a5a8-0751-4cc2-82c8-ff332def73c7",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 200m,
                            TransactionDate = new DateTime(2024, 8, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6284),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "51406b14-67df-4c3d-b0c2-86dc8ec73841",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -300m,
                            TransactionDate = new DateTime(2024, 7, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6287),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "159d454c-e3c5-46a6-81bd-7eae9a4c75b4",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -100m,
                            TransactionDate = new DateTime(2024, 6, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6299),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "f57594c9-7e5c-48c6-be1c-42ccaa3aee81",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 200m,
                            TransactionDate = new DateTime(2024, 5, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6303),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "9e0cacc6-3fa2-4b88-9549-102bfe4dd960",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -500m,
                            TransactionDate = new DateTime(2024, 4, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6320),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "1898f00c-4ca3-4d2b-b5d6-f8e9a57259c2",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 900m,
                            TransactionDate = new DateTime(2024, 3, 12, 15, 41, 11, 815, DateTimeKind.Local).AddTicks(6323),
                            TransactionType = 0
                        });
                });

            modelBuilder.Entity("Entites.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "5b1aa188-636f-436a-a2da-ae742ddadedf",
                            Email = "admin@patternstech.com",
                            FirstName = "Patterns",
                            LastName = "Tech",
                            ProfilePicUrl = "https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_crop,g_face,r_max/w_200/lady.jpg"
                        },
                        new
                        {
                            Id = "52694168-6706-4595-bdea-bae0da5923f0",
                            Email = "john.doe.ddd@outlook.com",
                            FirstName = "John",
                            LastName = "Doe",
                            ProfilePicUrl = "https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_crop,g_face,r_max/w_200/lady.jpg"
                        });
                });

            modelBuilder.Entity("Entites.Account", b =>
                {
                    b.HasOne("Entites.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("Entites.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entites.Transaction", b =>
                {
                    b.HasOne("Entites.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Entites.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Entites.User", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
