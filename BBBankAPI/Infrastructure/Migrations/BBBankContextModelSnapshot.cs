// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BBBankContext))]
    partial class BBBankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entites.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("AccountTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            AccountNumber = "0001-1001",
                            AccountStatus = 0,
                            AccountTitle = "Patterns Tech",
                            CurrentBalance = 3500m,
                            UserId = "5b1aa188-636f-436a-a2da-ae742ddadedf"
                        },
                        new
                        {
                            Id = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            AccountNumber = "0002-2002",
                            AccountStatus = 0,
                            AccountTitle = "John Doe",
                            CurrentBalance = 545m,
                            UserId = "52694168-6706-4595-bdea-bae0da5923f0"
                        });
                });

            modelBuilder.Entity("Entites.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = "1ae030d0-7456-45e2-bd28-ccf8aed1df89",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 3000m,
                            TransactionDate = new DateTime(2025, 2, 11, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8045),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "bf9a3246-0043-4b9f-bee5-3aca11334dab",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -500m,
                            TransactionDate = new DateTime(2024, 2, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8660),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "b5ab2b66-8526-4349-be98-62a7d656a422",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 1000m,
                            TransactionDate = new DateTime(2023, 2, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8683),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "45b982a1-3e81-4a43-a0b8-564bbe457e31",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 500m,
                            TransactionDate = new DateTime(2024, 11, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8700),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "88fdf9d6-10c7-4979-8727-b2ece3664544",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -200m,
                            TransactionDate = new DateTime(2024, 10, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8750),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "8cb7f141-e59a-4d7c-b809-3dc2044458c4",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 500m,
                            TransactionDate = new DateTime(2024, 9, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8760),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "06db49d7-d068-4aa2-83f3-3a512aee5a4a",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 200m,
                            TransactionDate = new DateTime(2024, 8, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8782),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "7af18e39-4183-4e63-ab01-43fa8be08cdb",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -300m,
                            TransactionDate = new DateTime(2024, 7, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8786),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "657e6b13-6289-4ae6-b620-85e57feb73a7",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -100m,
                            TransactionDate = new DateTime(2024, 6, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8796),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "31bb56d7-cc28-411c-8b23-d472771f2999",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 200m,
                            TransactionDate = new DateTime(2024, 5, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8814),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "cfb80e61-334f-43e4-ab0c-7dad889f993f",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -500m,
                            TransactionDate = new DateTime(2024, 4, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8817),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "7552a7fe-f909-4ab5-8755-c110af85b3b2",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 900m,
                            TransactionDate = new DateTime(2024, 3, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8824),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "95692060-ac52-4ba1-8688-ac1e3433b072",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = 2000m,
                            TransactionDate = new DateTime(2025, 2, 11, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8838),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "d9875372-4500-4e73-829d-7024ac062dc1",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = -400m,
                            TransactionDate = new DateTime(2024, 2, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8842),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "c0996c98-8ad8-4950-b9de-312e367874e2",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = 9000m,
                            TransactionDate = new DateTime(2023, 2, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8849),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "ae520b71-d7da-4195-9035-15888ac99ea2",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = 200m,
                            TransactionDate = new DateTime(2024, 11, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8853),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "42d29091-f1c2-4e18-b5b2-1c4f70a7a2a1",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = -100m,
                            TransactionDate = new DateTime(2024, 10, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8856),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "e0d1228c-758c-4a02-b3a3-4a3c74368090",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = 300m,
                            TransactionDate = new DateTime(2024, 9, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8862),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "8064a490-1156-4133-8f50-1ec261f9dceb",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = 100m,
                            TransactionDate = new DateTime(2024, 8, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8866),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "37803ae3-88c4-48ee-bb63-05cc94ff63a5",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = -200m,
                            TransactionDate = new DateTime(2024, 7, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8870),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "3cdb3d89-729c-4193-a70f-d449e4312f79",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = -200m,
                            TransactionDate = new DateTime(2024, 6, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8873),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "db9581f8-1e3d-4589-b4de-c86d75362a52",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = 300m,
                            TransactionDate = new DateTime(2024, 5, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8877),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "2d37e74c-d148-435b-a187-3ef9ff11533b",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = -200m,
                            TransactionDate = new DateTime(2024, 4, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8883),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "76f1dfc0-04b1-4805-81d6-dee23720be28",
                            AccountId = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            TransactionAmount = 800m,
                            TransactionDate = new DateTime(2024, 3, 12, 15, 58, 20, 521, DateTimeKind.Local).AddTicks(8887),
                            TransactionType = 0
                        });
                });

            modelBuilder.Entity("Entites.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "5b1aa188-636f-436a-a2da-ae742ddadedf",
                            Email = "admin@patternstech.com",
                            FirstName = "Patterns",
                            LastName = "Tech",
                            ProfilePicUrl = "https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_crop,g_face,r_max/w_200/lady.jpg"
                        },
                        new
                        {
                            Id = "52694168-6706-4595-bdea-bae0da5923f0",
                            Email = "john.doe.ddd@outlook.com",
                            FirstName = "John",
                            LastName = "Doe",
                            ProfilePicUrl = "https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_crop,g_face,r_max/w_200/lady.jpg"
                        });
                });

            modelBuilder.Entity("Entites.Account", b =>
                {
                    b.HasOne("Entites.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("Entites.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entites.Transaction", b =>
                {
                    b.HasOne("Entites.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Entites.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Entites.User", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
